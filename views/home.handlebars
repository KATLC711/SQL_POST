<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page</title>
    <link rel="stylesheet" href="/css/home.css">
</head>

<body>


    <div class="content-table">
        <h1>Insert New Record</h1>
        <form id="insert-form">
            <label>Name</label><br>
            <input type="text" name="name" id="name">
            <br>
            <label>Reps</label><br>
            <input type="number" name="reps" id="reps"><br>
            <label>Weight</label><br>
            <input type="number" name="weight" id="weight"><br>
            <label>Date</label><br>
            <input type="date" name="date" id="date"><br>
            <label>Unit</label><br>
            <input type="radio" id="kg" name="unit" value="kg">kg
            <input type="radio" id="lbs" name="unit" value="lbs">lbs
            <input type="radio" style="display:none" id="na" name="unit" value="na" checked><br>
            <button type="submit" id='insert-submit'>Submit with GET</button>
        </form>
    </div>


    <br>

    <div class="content-table">
        <h1>Here's your table</h1>
        <br>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Reps</th>
                    <th>Weight</th>
                    <th>Date</th>
                    <th>Unit</th>
                    <th>Delete</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody id="content-table">
                {{#each results}}
                <tr>
                    <td>{{this.name}}</td>
                    <td>{{this.reps}}</td>
                    <td>{{this.weight}}</td>
                    <td>{{this.date}}</td>
                    <td>{{this.unit}}</td>
                    <td><button onclick="Delete_Record({{this.id}});">Delete</button></td>
                    <td><button onclick="Edit_Record({{this.id}});">Edit</button></td>
                </tr>
                {{/each}}
            </tbody>

        </table>
    </div>

    <br>

    <div id="edit-form" class="edit-form">
        <h1>Edit Form</h1>
        <form>
            <input type="hidden" name="id" id="edit-id" required><br>
            <label>Name</label><br>
            <input type="text" name="name" id="edit-name" required><br>
            <label>Reps</label><br>
            <input type="number" name="reps" id="edit-reps"><br>
            <label>Weight</label><br>
            <input type="number" name="weight" id="edit-weight"><br>
            <label>Date</label><br>
            <input type="date" name="date" id="edit-date"><br>
            <label>Unit</label><br>

            <input type="radio" id="edit-kg" name="edit-unit" value="kg">kg
            <input type="radio" id="edit-lbs" name="edit-unit" value="lbs">lbs
            <input type="radio" style="display:none" id="edit-na" name="edit-unit" value="na"><br>


            <button type="submit" id='edit-submit-get'>Submit</button>
            <button type="button" onclick="closeEditForm()">Close</button>
        </form>


    </div>



    <script>


        document.getElementById('insert-submit').addEventListener('click', function (event) {

            var name = document.getElementById('name').value;

            if (name === "") {
                alert("Please enter the Name in the form");
                event.preventDefault();
                return
            } else {
                var req = new XMLHttpRequest();
                var reps = document.getElementById('reps').value;
                var weight = document.getElementById('weight').value;
                var date = document.getElementById('date').value;
                var unit = document.querySelector('input[name = "unit"]:checked').value;

                //console.log(name, reps, weight, date, unit)
                if (reps == "") {
                    reps = -1
                }
                if (weight == "") {
                    weight = -1
                }
                if (date == "") {
                    date = "9999-12-31"
                }

                var insert_data = {}
                insert_data.typ = "Insert"
                insert_data.name = name
                insert_data.reps = reps
                insert_data.weight = weight
                insert_data.date = date
                insert_data.unit = unit
                req.open('POST', '/', true);
                req.setRequestHeader('Content-Type', 'application/json');
                req.addEventListener('load', function () {
                    if (req.status >= 200 && req.status < 400) {
                        console.log("Insert Success")
                        document.getElementById("insert-form").reset();
                        var response = JSON.parse(req.responseText);
                        var response2 = JSON.parse(response.results);
                        console.log(response2)
                        DOMtable(response2);
                    } else {
                        console.log("Error in network request: " + req.statusText);
                    }
                });
                req.send(JSON.stringify(insert_data));
                event.preventDefault();

            }
        });






        function DOMtable(rows) {

            var TBodyTag = document.getElementById('content-table')
            TBodyTag.innerHTML = '';

            for (i = 0; i < rows.length; i++) {
                var TBodyRow = document.createElement("tr")

                var TBodyContent = document.createElement("td")
                TBodyContent.textContent = rows[i].name
                TBodyRow.appendChild(TBodyContent)

                var TBodyContent = document.createElement("td")

                if (rows[i].reps == -1) {
                    TBodyContent.textContent = ""
                } else {
                    TBodyContent.textContent = rows[i].reps
                }
                TBodyRow.appendChild(TBodyContent)



                var TBodyContent = document.createElement("td")
                if (rows[i].weight == -1) {
                    TBodyContent.textContent = ""
                } else {
                    TBodyContent.textContent = rows[i].weight
                }
                TBodyRow.appendChild(TBodyContent)




                var TBodyContent = document.createElement("td")
                if (getFormattedDateYMR(rows[i].date) == "9999-12-31") {
                    TBodyContent.textContent = ""
                } else {
                    TBodyContent.textContent = getFormattedDate(rows[i].date)
                }
                TBodyRow.appendChild(TBodyContent)



                var TBodyContent = document.createElement("td")

                if (rows[i].unit == "na") {
                    TBodyContent.textContent = ""
                } else {
                    TBodyContent.textContent = rows[i].unit
                }
                TBodyRow.appendChild(TBodyContent)




                var TBodyContent = document.createElement("td")
                var delete_btn = document.createElement('button');
                let delete_id = rows[i].id
                delete_btn.innerHTML = 'Delete';
                delete_btn.onclick = function () {
                    Delete_Record(delete_id);
                };
                TBodyContent.appendChild(delete_btn)
                TBodyRow.appendChild(TBodyContent)


                var TBodyContent = document.createElement("td")
                var edit_btn = document.createElement('button');
                let edit_id = rows[i].id
                edit_btn.innerHTML = 'Edit';
                edit_btn.onclick = function () {
                    Edit_Record(edit_id);
                };
                TBodyContent.appendChild(edit_btn)
                TBodyRow.appendChild(TBodyContent)







                TBodyTag.appendChild(TBodyRow)

            }
        }


        function Delete_Record(id) {


            var req = new XMLHttpRequest();
            var delete_data = {}
            delete_data.typ = "Delete"
            delete_data.id = id
            req.open('POST', '/', true);
            req.setRequestHeader('Content-Type', 'application/json');
            req.addEventListener('load', function () {
                if (req.status >= 200 && req.status < 400) {
                    var response = JSON.parse(req.responseText);
                    var response2 = JSON.parse(response.results);
                    DOMtable(response2);
                } else {
                    console.log("Error in network request: " + req.statusText);
                }
            });
            req.send(JSON.stringify(delete_data));
            event.preventDefault();

        }


        function Edit_Record(id) {
            document.getElementById("edit-form").style.display = "block";
            var req = new XMLHttpRequest();
            var edit_request = {}
            edit_request.typ = "Edit_Data_request"
            edit_request.id = id
            req.open('POST', '/', true);
            req.setRequestHeader('Content-Type', 'application/json');
            req.addEventListener('load', function () {
                if (req.status >= 200 && req.status < 400) {
                    var response = JSON.parse(req.responseText);
                    var response2 = JSON.parse(response.results);

                    document.getElementById('edit-name') = response2.name
                    document.getElementById('edit-reps') = response2.reps
                    document.getElementById('edit-weight') = response2.weight
                    document.getElementById('edit-date') = response2.date
                    if (response2.unit == "kg") {
                        document.getElementById("edit-kg").checked = true
                    } else if (response2.unit == "lbs") {
                        document.getElementById("edit-lbs").checked = true
                    } else {
                        document.getElementById("edit-na").checked = true
                    }

                } else {
                    console.log("Error in network request: " + req.statusText);
                }
            });
            req.send(JSON.stringify(edit_request));
            event.preventDefault();
        }





        function getFormattedDate(date_unformmated) {

            var date = new Date(date_unformmated)

            var year = date.getFullYear();

            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;

            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            final = month + '-' + day + '-' + year;

            return final.toString();
        }




        function getFormattedDateYMR(date_unformmated) {

            var date = new Date(date_unformmated)

            var year = date.getFullYear();

            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;

            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            final = year + '-' + month + '-' + day;

            return final.toString();
        }


        function closeEditForm() {
            document.getElementById("edit-form").style.display = "none";
        }


    </script>


</body>

</html>